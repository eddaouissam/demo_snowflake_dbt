name: DBT CI/CD

on:
  schedule:
   - cron: '*/5 * * * *' # Runs every 5 minutes 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  dbt_ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install DBT and Snowflake adapter
        run: |
          pip install dbt-core dbt-snowflake

      - name: Set up DBT profile
        run: |
          mkdir -p ~/.dbt
          echo "poc_sap:
            outputs:
              dev:
                account: $SNOWFLAKE_ACCOUNT
                database: $SNOWFLAKE_DATABASE
                password: $SNOWFLAKE_PASSWORD
                role: $SNOWFLAKE_ROLE
                schema: $SNOWFLAKE_SCHEMA
                threads: 4
                type: snowflake
                user: $SNOWFLAKE_USER
                warehouse: $SNOWFLAKE_WAREHOUSE
            target: dev" > ~/.dbt/profiles.yml

      - name: DBT debug
        run: dbt debug
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      - name: DBT test
        run: dbt test
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

  dbt_cd:
    runs-on: ubuntu-latest
    needs: dbt_ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install DBT and Snowflake adapter
        run: |
          pip install dbt-core dbt-snowflake

      - name: Set up DBT profile
        run: |
          mkdir -p ~/.dbt
          echo "poc_sap:
            outputs:
              dev:
                account: $SNOWFLAKE_ACCOUNT
                database: $SNOWFLAKE_DATABASE
                password: $SNOWFLAKE_PASSWORD
                role: $SNOWFLAKE_ROLE
                schema: $SNOWFLAKE_SCHEMA
                threads: 4
                type: snowflake
                user: $SNOWFLAKE_USER
                warehouse: $SNOWFLAKE_WAREHOUSE
            target: dev" > ~/.dbt/profiles.yml

      - name: DBT debug
        run: dbt debug
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      - name: DBT run
        run: dbt run
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
